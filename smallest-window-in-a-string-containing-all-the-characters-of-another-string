// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution
{
    public:
    //Function to find the smallest window in the string s consisting
    //of all the characters of string p.
    string smallestWindow (string s, string p)
    {
        bool ans=false;
        int left=0,right=0,minans=INT_MAX,l,k=0;
        map<char, int> mp1,mp2,dp;
        if(p.size()>s.size())
        return "-1";
        for(int i=0;i<p.length();i++)
        {
            mp1[p[i]]++;
            dp[p[i]]++;
        }
        for(int i=0;i<s.length();i++)
        {
            mp2[s[i]]++;
            if(!ans){
                if(dp[s[i]]>0)
                dp[s[i]]--;
                if(dp[s[i]]==0)
                dp.erase(s[i]);
            }
            if(dp.empty()){
            ans=true;
            k++;}
            if((ans&&s[left]==s[i])||k==1)
            {
                while(left<=right)
                {
                    if(mp2[s[left]]>mp1[s[left]]){
                        mp2[s[left]]--;
                        left++;
                    }
                    else
                    break;
                }
                if(right-left+1<minans)
                {
                    minans=right-left+1;
                    l=left;
                }
            }
            right++;
        }
        if(ans)
        return s.substr(l,minans);
        else
        return "-1";
    }
};

// { Driver Code Starts.
int main()
 {
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        string pat;
        cin>>pat;
        Solution obj;
        cout<<obj.smallestWindow(s, pat)<<endl;
        
    }
	return 0;
}  // } Driver Code Ends
