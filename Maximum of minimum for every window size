// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends

class Solution
{
    public:
    //Function to find maximum of minimums of every window size.
    vector <int> maxOfMin(int arr[], int n)
    {
        int a[n]={0},r[n]={n},l[n]={-1};
        stack<int> st;
        for(int i=0;i<n;i++)
        {
            r[i]=n;l[i]=-1;
        }
        for(int i=n-1;i>=0;i--)
        {
            while(!st.empty())
            {
                if(arr[st.top()]>=arr[i]){
                    st.pop();
                }
                else
                break;
            }
            if(!st.empty())
            r[i]=st.top();
            st.push(i);
        }
        while(!st.empty())
        st.pop();
        for(int i=0;i<n;i++)
        {
            while(!st.empty())
            {
                if(arr[st.top()]>=arr[i]){
                    st.pop();
                }
                else
                break;
            }
            if(!st.empty())
            l[i]=st.top();
            st.push(i);
        }
        for(int i=0;i<n;i++)
        {
            a[r[i]-l[i]-2]=max(a[r[i]-l[i]-2],arr[i]);
        }
        for(int i=n-2;i>=0;i--)
        {
            a[i]=max(a[i],a[i+1]);
        }
        vector<int> vt;
        for(int i=0;i<n;i++)
        {
            vt.push_back(a[i]);
        }
        return vt;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++) cin >> a[i];
        Solution ob;
        vector <int> res = ob.maxOfMin(a, n);
        for (int i : res) cout << i << " ";
        cout << endl;
    }
    return 0;
}
  // } Driver Code Ends
